## Para inciar o programa
    mongosh
## Para exibir os database já existentes
    show dbs
## Para criar uma tabela ou collection
    db.createCollection("nome")
## Para alterar entre as tabelas
    use nome
## Para apagar/deletar a collection
    db.nome.drop()
## Para criar uma tabela pode se usar o mesmo comando de alterar
    use usuarios
## Para criar uma informação dentro do database, colocando em uma tabela
    db.comuns.insertOne(nome: "zhant", sobrenome: "Gama", idade: "12")
## Para encontrar todos os dados inseridos
    db.comuns.find()
## Para inserir com atributos em lista
    db.comuns.insertOne({
        nome: "bluiz",
        sobrenome: "Silva",
        idade: "12".
        habilidades[{
            luta: "Sim",
            armas: "Sim",
            venenos: "Sim"
        }]
    })
## Para inserir com atributos em lista com id proprios
    db.comuns.insertOne({ nome: "Crosser", sobrenome: "Sol", idade: "41", habilidades: [{ luta: [{kungFu: "sim"}], armas: [{faca: "sim", glock: "sim"}], venenos: [{_id: ObjectId(), codigo: ObjectId()}] }] })
## Para realizar consulta de todos com determinado atributo
     db.comuns.find({nome: "Crosser"})
## Para realizar consulta do primeiro com determinado atributo
    db.comuns.findOne({nome: "Crosser"})
## Para realizar consultas utilizando o "or"
    db.comuns.find({$or: [{nome: "zhant"}, {sobrenome: "Sol"}]})
## Para realizar consultas utilizando o "and"
    db.comuns.find({$and: [{idade: "41"}, {sobrenome: "Sol"}]}).pretty()
## Para verificar a quantidade de objetos existentes
    db.comuns.countDocuments()
## Para fazer uma atualização ou adicionar um novo atributo
    db.carros.updateOne({Versao: "Cronos"}, {$set: {categoria: [{cambio: "automatico"}, {tipo: "usado"}]}}) 
## Para fazer uma pesquisa mostrando apenas os atributos escolhiddos
    db.carros.aggregate([{ $project: {Versao: 1, _id: 1}}])
## Para remover uma collection
    db.comuns.remove({nome: "Crosser" })
## Para remover apenas se determinado atributo existir e limitar a quantidade 
    db.comuns.remove({habilidades: {$exists: true}}, 1)
## Para remover a partir somente se for menor que determinado valor
    db.carros.remove({Ano: {$lt: 2016}})